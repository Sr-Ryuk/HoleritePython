# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calculo.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import webbrowser as wb
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter, A4
import datetime

class Ui_Widget(object):
    def setupUi(self, Widget):
        Widget.setObjectName("Widget")
        Widget.resize(912, 597)
        Widget.setStyleSheet("QLineEdit{\n"
"font-size:14pt;\n"
"border-radius:6px;\n"
"border:1px solid blue;\n"
"color:black;\n"
"}\n"
"QPushButton{\n"
"font-size:14pt;\n"
"color:blue;\n"
"}")
        self.groupBox_5 = QtWidgets.QGroupBox(Widget)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 30, 431, 431))
        self.groupBox_5.setStyleSheet("color:blue;\n"
"font-size:14pt;\n"
"border:1px solid blue;")
        self.groupBox_5.setObjectName("groupBox_5")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit.setGeometry(QtCore.QRect(22, 50, 391, 41))
        self.lineEdit.setStyleSheet("color:black;")
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.groupBox_5)
        self.label.setGeometry(QtCore.QRect(30, 110, 381, 171))
        self.label.setStyleSheet("border:none;")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../../Downloads/images-removebg-preview (1).png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_8 = QtWidgets.QLabel(self.groupBox_5)
        self.label_8.setGeometry(QtCore.QRect(40, 300, 371, 101))
        self.label_8.setStyleSheet("color:black;\n"
"border:none;")
        self.label_8.setObjectName("label_8")
        self.lineEdit_7 = QtWidgets.QLineEdit(Widget)
        self.lineEdit_7.setEnabled(False)
        self.lineEdit_7.setGeometry(QtCore.QRect(330, 480, 371, 41))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.label_2 = QtWidgets.QLabel(Widget)
        self.label_2.setGeometry(QtCore.QRect(180, 480, 141, 31))
        self.label_2.setObjectName("label_2")
        self.groupBox_4 = QtWidgets.QGroupBox(Widget)
        self.groupBox_4.setGeometry(QtCore.QRect(450, 30, 431, 431))
        self.groupBox_4.setStyleSheet("color:blue;\n"
"font-size:14pt;\n"
"border:1px solid blue;")
        self.groupBox_4.setObjectName("groupBox_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_2.setEnabled(False)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 50, 371, 41))
        self.lineEdit_2.setStyleSheet("color:black;")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_3.setEnabled(False)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 120, 371, 41))
        self.lineEdit_3.setStyleSheet("color:black;")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_4.setEnabled(False)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 190, 371, 41))
        self.lineEdit_4.setStyleSheet("color:black;")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 260, 371, 41))
        self.lineEdit_5.setStyleSheet("color:black;")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_6.setGeometry(QtCore.QRect(10, 340, 371, 41))
        self.lineEdit_6.setStyleSheet("color:black;")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_3 = QtWidgets.QLabel(self.groupBox_4)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 141, 31))
        self.label_3.setStyleSheet("color:black;\n"
"border:none;")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox_4)
        self.label_4.setGeometry(QtCore.QRect(0, 90, 81, 21))
        self.label_4.setStyleSheet("color:black;\n"
"border:none;")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox_4)
        self.label_5.setGeometry(QtCore.QRect(-10, 160, 91, 31))
        self.label_5.setStyleSheet("color:black;\n"
"border:none;")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox_4)
        self.label_6.setGeometry(QtCore.QRect(20, 230, 141, 31))
        self.label_6.setStyleSheet("color:black;\n"
"border:none;")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox_4)
        self.label_7.setGeometry(QtCore.QRect(20, 310, 151, 31))
        self.label_7.setStyleSheet("color:black;\n"
"border:none;")
        self.label_7.setObjectName("label_7")
        self.btnPdf = QtWidgets.QPushButton(Widget)
        self.btnPdf.setGeometry(QtCore.QRect(60, 550, 261, 41))
        self.btnPdf.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btnPdf.setObjectName("btnPdf")
        self.btnSair = QtWidgets.QPushButton(Widget)
        self.btnSair.setGeometry(QtCore.QRect(590, 550, 251, 41))
        self.btnSair.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btnSair.setObjectName("btnSair")

        self.retranslateUi(Widget)
        QtCore.QMetaObject.connectSlotsByName(Widget)

        #Conectando os Botões
        self.lineEdit.textChanged.connect(lambda: self.calculo())
        self.btnSair.clicked.connect(lambda: self.fechar())
        self.btnPdf.clicked.connect(lambda: self.pdf())

    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "Widget"))
        self.groupBox_5.setTitle(_translate("Widget", "Configurações:"))
        self.lineEdit.setPlaceholderText(_translate("Widget", "Digite aqui o valor bruto"))
        self.label_8.setText(_translate("Widget", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt;\">Gerador de Holerite Digital</span></p><p align=\"center\"><span style=\" font-size:16pt;\">Turma TI: 099/0129/212</span></p></body></html>"))
        self.label_2.setText(_translate("Widget", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt;\">Salário Líquido:</span></p></body></html>"))
        self.groupBox_4.setTitle(_translate("Widget", "Cálculo:"))
        self.label_3.setText(_translate("Widget", "<html><head/><body><p align=\"center\">FGTS</p></body></html>"))
        self.label_4.setText(_translate("Widget", "<html><head/><body><p align=\"center\">INSS</p></body></html>"))
        self.label_5.setText(_translate("Widget", "<html><head/><body><p align=\"center\">IRRF</p></body></html>"))
        self.label_6.setText(_translate("Widget", "<html><head/><body><p align=\"center\">Vale Transporte:</p></body></html>"))
        self.label_7.setText(_translate("Widget", "<html><head/><body><p align=\"center\">Vale Alimentação:</p></body></html>"))
        self.btnPdf.setText(_translate("Widget", "Gerar PDF"))
        self.btnSair.setText(_translate("Widget", "Sair"))

    #Funções dos botões
    def fechar(self):
        print('Finalizando Aplicação . . .')
        sys.exit()

    def pdf(self):
        now = datetime.datetime.now()
        horaAtual = now.strftime('%H:%M:%S')
        relatorioPDF = canvas.Canvas("Holerite2.pdf", pagesize=letter)
        relatorioPDF.setFillColor('blue')
        relatorioPDF.setFont('Times-Roman', 18)
        relatorioPDF.drawString(10, 750, "Meu Pagamento Líquido 2")
        relatorioPDF.setStrokeColor('blue')
        relatorioPDF.setLineWidth(1)
        # linha Horizontal Superior
        relatorioPDF.line(10, 740, 590, 740)
        relatorioPDF.line(10, 700, 590, 700)
        relatorioPDF.line(10, 680, 590, 680)
        relatorioPDF.line(10, 320, 590, 320)
        relatorioPDF.line(350, 270, 590, 270)
        # linha Vertical Esquerda
        relatorioPDF.line(10, 240, 10, 740)
        relatorioPDF.line(70, 700, 70, 320)
        relatorioPDF.line(300, 700, 300, 320)
        relatorioPDF.line(350, 240, 350, 700)
        relatorioPDF.line(480, 240, 480, 700)
        # linha horizontal Inferior
        relatorioPDF.line(10, 240, 590, 240)
        # linha Vertical Direita
        relatorioPDF.line(590, 740, 590, 240)
        # Dados Escritos
        relatorioPDF.setFillColor('black')
        relatorioPDF.setFont('Times-Roman', 12)
        relatorioPDF.drawString(75, 720, "Diogo Wallace Maciel Ferreira")
        relatorioPDF.drawString(25, 720, "1000")
        relatorioPDF.drawString(25, 685, "Cód")
        relatorioPDF.drawString(150, 685, "Descrição")
        relatorioPDF.drawString(80, 650, "Valor Bruto")
        relatorioPDF.drawString(80, 630, "FGTS")
        relatorioPDF.drawString(80, 610, "INSS")
        relatorioPDF.drawString(80, 590, "IRRF")
        relatorioPDF.drawString(80, 570, "Vale Transporte")
        relatorioPDF.drawString(80, 550, "Vale Alimentação")
        relatorioPDF.drawString(310, 685, "Ref")
        relatorioPDF.drawString(310, 650, "Total")
        relatorioPDF.drawString(380, 685, "Vencimentos")
        relatorioPDF.drawString(380, 720, f"{horaAtual}")
        relatorioPDF.drawString(380, 650, f"{self.lineEdit.text()}")
        relatorioPDF.drawString(380, 630, f"{self.lineEdit_2.text()}")
        relatorioPDF.drawString(380, 610, f"{self.lineEdit_3.text()}")
        relatorioPDF.drawString(380, 590, f"{self.lineEdit_4.text()}")
        relatorioPDF.drawString(380, 570, f"{self.lineEdit_5.text()}")
        relatorioPDF.drawString(380, 550, f"{self.lineEdit_6.text()}")
        relatorioPDF.drawString(490, 685, "Descontos")
        relatorioPDF.drawString(360, 300, "Total de Vencimentos")
        relatorioPDF.drawString(487, 300, "Total de Descontos")
        relatorioPDF.drawString(360, 250, "Valor Líquido")
        relatorioPDF.drawString(500, 250, f"{self.lineEdit_7.text()}")


        relatorioPDF.save()
        print('Gerando pdf ...')
        wb.open_new(r'C:\Users\889539\CalculoHole\Holerite2.pdf')


    def calculo(self):

        if (self.lineEdit.text() != ''):
            valor = int(self.lineEdit.text())
            fgts = (valor * 0.08)
            valeT = (valor * 0.06)
            valeA = (valor * 0.1)
            irrf = 0
            #Definindo os valores
            if valor > 5839.45:
                inss = 642.34
            elif valor >=2219.73 and valor <=5839.45:
                inss = (valor * 0.11)
            elif valor < 1751.82:
                inss = (valor * 0.08)
            elif valor <= 2219.72 and valor >= 1751.82:
                inss = (valor * 0.09)
            valor = int(self.lineEdit.text())
            if valor <=1903.98:
                irrf = 0
            elif valor >1903.98 and valor <=2826.65:
                irrf = 0.75 * valor
            elif valor >2826.65 and valor <=3751.05:
                irrf = 0.15 * valor
            elif valor >3751.05 and valor <=4664.68:
                irrf = 0.225*valor
            elif valor >4664.68:
                irrf = 0.275*valor

                #Calculo dps das verificações
            calc = (valor - (irrf) - (inss) - (valeT) - (fgts) - (valeA))
            self.lineEdit_2.setText(str(fgts))
            self.lineEdit_3.setText(str(inss))
            self.lineEdit_5.setText(str(valeT))
            self.lineEdit_4.setText(str(irrf))
            self.lineEdit_6.setText(str(valeA))
            self.lineEdit_7.setText(str(calc))
        else:
            print('Erro')

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Widget = QtWidgets.QWidget()
    ui = Ui_Widget()
    ui.setupUi(Widget)
    Widget.show()
    sys.exit(app.exec_())
